{"randomArticles":[{"articleTitle":"设计模式--工厂方法","articleAbstractText":"意图 工厂方法模式属于 创建型设计模式的一种，在父类中提供一个创建对象的方法，允许子类根据具体的业务场景实例化特定类型的对象。 结合具体场景 这里举一种代码开发中设想的一种简单场景： 比如如果我们在开发界面时，存在一些本地化的界面展示效果，这里以简单的Dialog和Button两个组件做简单案例分析。 假如我们需要根据当前系统运行的所在平台，区分出到底是Web界面的HTML风格、或者说Mac OS/Windows这种客户端的风格，根据不同的所处环境，渲染出符合所在环境的界面效果。 Dialog 作为用户端的最终使用效果，我们可能就是一句简单的render操作： dialog.renderWindow();  但是这句话的背后，需要面临的是：我们首先需要根据配置或者其他的指定方案来确定具体的Dialog类型，然后在具体的Dialog类型里面做子类中更具体类型的渲染效果。 所以这里可以简单分析出需要一个基类Dialog，然后根据需要，还要有另外两种Dialog类型：HtmlDialog、WindowsDialog。 另外一点：对于renderWindow()方法，在基类中应该是只有定义，具....","articleStatus":0,"articlePermalink":"/articles/2022/11/05/1667622285705.html","articleImg1URL":"https://b3logfile.com/bing/20200922.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"世界，你好！","articleAbstractText":"Solo 博客系统已经初始化完毕，可在管理后台 - 工具 - 偏好设定中调整更多细节设置。如果需要导入已有博客文章，请参考文档 Solo 支持 Hexo/Jekyll 数据导入。 对了，出于安全考虑请尽快完成如下操作： 登录链滴社区后，在个人设置 - B3 中更新 B3 Key 在 Solo 管理后台 - 工具 - 用户管理中也进行同样的 B3 Key 更新 另外，如果你需要开启评论系统，请参考 Solo 集成 Gitalk 评论系统。 最后，如果你觉得 Solo 很赞的话，请到项目主页 Watch、Star、Fork 三连 😍","articleStatus":0,"articlePermalink":"/hello-solo","articleImg1URL":"https://b3logfile.com/bing/20220218.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}